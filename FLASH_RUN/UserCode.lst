   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"UserCode.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UsrCode,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	UsrCode
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	UsrCode:
  25              	.LFB29:
  26              		.file 1 "UserCode.c"
   1:UserCode.c    **** #include "UserCode.h"
   2:UserCode.c    **** #include "libdso138.h"
   3:UserCode.c    **** 
   4:UserCode.c    **** volatile U32  currentTickVal,previousTickVal,deltaTickValue;
   5:UserCode.c    **** 
   6:UserCode.c    **** void UsrCode()
   7:UserCode.c    **** {
  27              		.loc 1 7 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
   8:UserCode.c    ****     //Current Voltage Sensitivity
   9:UserCode.c    ****     uputs((U8 *)"\rCurrent Voltage Sensitivity: ", USART1);
  39              		.loc 1 9 0
  40 0004 384C     		ldr	r4, .L4
  41 0006 394D     		ldr	r5, .L4+4
  42 0008 2146     		mov	r1, r4
  43 000a 3948     		ldr	r0, .L4+8
  10:UserCode.c    ****     uputInt(GetVSen(), USART1);    
  11:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);
  44              		.loc 1 11 0
  45 000c 394E     		ldr	r6, .L4+12
   9:UserCode.c    ****     uputInt(GetVSen(), USART1);    
  46              		.loc 1 9 0
  47 000e A847     		blx	r5
  48              	.LVL0:
  10:UserCode.c    ****     uputInt(GetVSen(), USART1);    
  49              		.loc 1 10 0
  50 0010 394B     		ldr	r3, .L4+16
  51 0012 3A4F     		ldr	r7, .L4+20
  52 0014 9847     		blx	r3
  53              	.LVL1:
  54 0016 2146     		mov	r1, r4
  55 0018 B847     		blx	r7
  56              	.LVL2:
  57              		.loc 1 11 0
  58 001a 2146     		mov	r1, r4
  59 001c 3046     		mov	r0, r6
  60 001e A847     		blx	r5
  61              	.LVL3:
  12:UserCode.c    **** 
  13:UserCode.c    ****     //Current Couple Setting
  14:UserCode.c    ****     uputs((U8 *)"\rCurrent Couple Setting: ", USART1);
  62              		.loc 1 14 0
  63 0020 2146     		mov	r1, r4
  64 0022 3748     		ldr	r0, .L4+24
  65 0024 A847     		blx	r5
  66              	.LVL4:
  15:UserCode.c    ****     uputInt(GetCpl(), USART1);    
  67              		.loc 1 15 0
  68 0026 374B     		ldr	r3, .L4+28
  69 0028 9847     		blx	r3
  70              	.LVL5:
  71 002a 2146     		mov	r1, r4
  72 002c B847     		blx	r7
  73              	.LVL6:
  16:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  74              		.loc 1 16 0
  75 002e 2146     		mov	r1, r4
  76 0030 3046     		mov	r0, r6
  77 0032 A847     		blx	r5
  78              	.LVL7:
  17:UserCode.c    **** 
  18:UserCode.c    ****     //Current Vertical Position
  19:UserCode.c    ****     uputs((U8 *)"\rCurrent Vertical Position: ", USART1);
  79              		.loc 1 19 0
  80 0034 2146     		mov	r1, r4
  81 0036 3448     		ldr	r0, .L4+32
  82 0038 A847     		blx	r5
  83              	.LVL8:
  20:UserCode.c    ****     uputInt(GetVPos(), USART1);    
  84              		.loc 1 20 0
  85 003a 344B     		ldr	r3, .L4+36
  86 003c 9847     		blx	r3
  87              	.LVL9:
  88 003e 2146     		mov	r1, r4
  89 0040 B847     		blx	r7
  90              	.LVL10:
  21:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  91              		.loc 1 21 0
  92 0042 2146     		mov	r1, r4
  93 0044 3046     		mov	r0, r6
  94 0046 A847     		blx	r5
  95              	.LVL11:
  22:UserCode.c    **** 
  23:UserCode.c    ****     //Current Time Base 
  24:UserCode.c    ****     uputs((U8 *)"\rCurrent Time Base: ", USART1);
  96              		.loc 1 24 0
  97 0048 2146     		mov	r1, r4
  98 004a 3148     		ldr	r0, .L4+40
  99 004c A847     		blx	r5
 100              	.LVL12:
  25:UserCode.c    ****     uputInt(GetTimebase(), USART1);    
 101              		.loc 1 25 0
 102 004e 314B     		ldr	r3, .L4+44
 103 0050 9847     		blx	r3
 104              	.LVL13:
 105 0052 2146     		mov	r1, r4
 106 0054 B847     		blx	r7
 107              	.LVL14:
  26:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 108              		.loc 1 26 0
 109 0056 2146     		mov	r1, r4
 110 0058 3046     		mov	r0, r6
 111 005a A847     		blx	r5
 112              	.LVL15:
  27:UserCode.c    **** 
  28:UserCode.c    ****     //Current Horizontal Position
  29:UserCode.c    ****     uputs((U8 *)"\rCurrent Horizontal Position: ", USART1);
 113              		.loc 1 29 0
 114 005c 2146     		mov	r1, r4
 115 005e 2E48     		ldr	r0, .L4+48
 116 0060 A847     		blx	r5
 117              	.LVL16:
  30:UserCode.c    ****     uputInt(GetHPos(), USART1);    
 118              		.loc 1 30 0
 119 0062 2E4B     		ldr	r3, .L4+52
 120 0064 9847     		blx	r3
 121              	.LVL17:
 122 0066 2146     		mov	r1, r4
 123 0068 B847     		blx	r7
 124              	.LVL18:
  31:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 125              		.loc 1 31 0
 126 006a 2146     		mov	r1, r4
 127 006c 3046     		mov	r0, r6
 128 006e A847     		blx	r5
 129              	.LVL19:
  32:UserCode.c    **** 
  33:UserCode.c    ****     //Current Trigger Mode
  34:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Mode: ", USART1);
 130              		.loc 1 34 0
 131 0070 2146     		mov	r1, r4
 132 0072 2B48     		ldr	r0, .L4+56
 133 0074 A847     		blx	r5
 134              	.LVL20:
  35:UserCode.c    ****     uputInt(GetTrigMode(), USART1);    
 135              		.loc 1 35 0
 136 0076 2B4B     		ldr	r3, .L4+60
 137 0078 9847     		blx	r3
 138              	.LVL21:
 139 007a 2146     		mov	r1, r4
 140 007c B847     		blx	r7
 141              	.LVL22:
  36:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 142              		.loc 1 36 0
 143 007e 2146     		mov	r1, r4
 144 0080 3046     		mov	r0, r6
 145 0082 A847     		blx	r5
 146              	.LVL23:
  37:UserCode.c    **** 
  38:UserCode.c    ****     //Current Trigger Slope
  39:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Slope: ", USART1);
 147              		.loc 1 39 0
 148 0084 2146     		mov	r1, r4
 149 0086 2848     		ldr	r0, .L4+64
 150 0088 A847     		blx	r5
 151              	.LVL24:
  40:UserCode.c    ****     uputInt(GetTrigEdge(), USART1);    
 152              		.loc 1 40 0
 153 008a 284B     		ldr	r3, .L4+68
 154 008c 9847     		blx	r3
 155              	.LVL25:
 156 008e 2146     		mov	r1, r4
 157 0090 B847     		blx	r7
 158              	.LVL26:
  41:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 159              		.loc 1 41 0
 160 0092 2146     		mov	r1, r4
 161 0094 3046     		mov	r0, r6
 162 0096 A847     		blx	r5
 163              	.LVL27:
  42:UserCode.c    **** 
  43:UserCode.c    ****     //Current Trigger Level
  44:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Level: ", USART1);
 164              		.loc 1 44 0
 165 0098 2146     		mov	r1, r4
 166 009a 2548     		ldr	r0, .L4+72
 167 009c A847     		blx	r5
 168              	.LVL28:
  45:UserCode.c    ****     uputInt(GetTrigLvl(), USART1);    
 169              		.loc 1 45 0
 170 009e 254B     		ldr	r3, .L4+76
 171 00a0 9847     		blx	r3
 172              	.LVL29:
 173 00a2 2146     		mov	r1, r4
 174 00a4 B847     		blx	r7
 175              	.LVL30:
  46:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 176              		.loc 1 46 0
 177 00a6 2146     		mov	r1, r4
 178 00a8 3046     		mov	r0, r6
 179 00aa A847     		blx	r5
 180              	.LVL31:
  47:UserCode.c    **** 
  48:UserCode.c    ****     //Current Record Length
  49:UserCode.c    ****     uputs((U8 *)"\rCurrent Record Length: ", USART1);
 181              		.loc 1 49 0
 182 00ac 2146     		mov	r1, r4
 183 00ae 2248     		ldr	r0, .L4+80
 184 00b0 A847     		blx	r5
 185              	.LVL32:
  50:UserCode.c    ****     uputInt(GetRecLen(), USART1);    
 186              		.loc 1 50 0
 187 00b2 224B     		ldr	r3, .L4+84
 188 00b4 9847     		blx	r3
 189              	.LVL33:
 190 00b6 2146     		mov	r1, r4
 191 00b8 B847     		blx	r7
 192              	.LVL34:
  51:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
 193              		.loc 1 51 0
 194 00ba 2146     		mov	r1, r4
 195 00bc 3046     		mov	r0, r6
 196 00be A847     		blx	r5
 197              	.LVL35:
  52:UserCode.c    **** 
  53:UserCode.c    ****     //Current Vertical Position Offeset
  54:UserCode.c    ****     uputs((U8 *)"\rCurrent Position Offeset: ", USART1);
 198              		.loc 1 54 0
 199 00c0 2146     		mov	r1, r4
 200 00c2 1F48     		ldr	r0, .L4+88
 201 00c4 A847     		blx	r5
 202              	.LVL36:
  55:UserCode.c    ****     uputInt(GetVPosOfs(), USART1);    
 203              		.loc 1 55 0
 204 00c6 1F4B     		ldr	r3, .L4+92
 205 00c8 9847     		blx	r3
 206              	.LVL37:
 207 00ca 2146     		mov	r1, r4
 208 00cc B847     		blx	r7
 209              	.LVL38:
  56:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);   
 210              		.loc 1 56 0
 211 00ce 2146     		mov	r1, r4
 212 00d0 3046     		mov	r0, r6
 213 00d2 A847     		blx	r5
 214              	.LVL39:
  57:UserCode.c    **** 
  58:UserCode.c    ****     //End Of Records
  59:UserCode.c    ****     uputs((U8 *)"----------------------------------------------------------------------------------
 215              		.loc 1 59 0
 216 00d4 2146     		mov	r1, r4
 217 00d6 1C48     		ldr	r0, .L4+96
 218 00d8 A847     		blx	r5
 219              	.LVL40:
  60:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);         
 220              		.loc 1 60 0
 221 00da 2146     		mov	r1, r4
 222 00dc 3046     		mov	r0, r6
 223 00de 2B46     		mov	r3, r5
  61:UserCode.c    **** 
  62:UserCode.c    **** }
 224              		.loc 1 62 0
 225 00e0 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 226              		.cfi_restore 14
 227              		.cfi_restore 8
 228              		.cfi_restore 7
 229              		.cfi_restore 6
 230              		.cfi_restore 5
 231              		.cfi_restore 4
 232              		.cfi_def_cfa_offset 0
  60:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);         
 233              		.loc 1 60 0
 234 00e4 1847     		bx	r3	@ indirect register sibling call
 235              	.LVL41:
 236              	.L5:
 237 00e6 00BF     		.align	2
 238              	.L4:
 239 00e8 00380140 		.word	1073821696
 240 00ec 00000000 		.word	uputs
 241 00f0 00000000 		.word	.LC0
 242 00f4 20000000 		.word	.LC1
 243 00f8 00000000 		.word	GetVSen
 244 00fc 00000000 		.word	uputInt
 245 0100 24000000 		.word	.LC2
 246 0104 00000000 		.word	GetCpl
 247 0108 40000000 		.word	.LC3
 248 010c 00000000 		.word	GetVPos
 249 0110 60000000 		.word	.LC4
 250 0114 00000000 		.word	GetTimebase
 251 0118 78000000 		.word	.LC5
 252 011c 00000000 		.word	GetHPos
 253 0120 98000000 		.word	.LC6
 254 0124 00000000 		.word	GetTrigMode
 255 0128 B0000000 		.word	.LC7
 256 012c 00000000 		.word	GetTrigEdge
 257 0130 CC000000 		.word	.LC8
 258 0134 00000000 		.word	GetTrigLvl
 259 0138 E8000000 		.word	.LC9
 260 013c 00000000 		.word	GetRecLen
 261 0140 04010000 		.word	.LC10
 262 0144 00000000 		.word	GetVPosOfs
 263 0148 20010000 		.word	.LC11
 264              		.cfi_endproc
 265              	.LFE29:
 267              		.comm	deltaTickValue,4,4
 268              		.comm	previousTickVal,4,4
 269              		.comm	currentTickVal,4,4
 270              		.comm	int_buffer,32,4
 271              		.section	.rodata.UsrCode.str1.4,"aMS",%progbits,1
 272              		.align	2
 273              	.LC0:
 274 0000 0D437572 		.ascii	"\015Current Voltage Sensitivity: \000"
 274      72656E74 
 274      20566F6C 
 274      74616765 
 274      2053656E 
 275 001f 00       		.space	1
 276              	.LC1:
 277 0020 0A0D00   		.ascii	"\012\015\000"
 278 0023 00       		.space	1
 279              	.LC2:
 280 0024 0D437572 		.ascii	"\015Current Couple Setting: \000"
 280      72656E74 
 280      20436F75 
 280      706C6520 
 280      53657474 
 281 003e 0000     		.space	2
 282              	.LC3:
 283 0040 0D437572 		.ascii	"\015Current Vertical Position: \000"
 283      72656E74 
 283      20566572 
 283      74696361 
 283      6C20506F 
 284 005d 000000   		.space	3
 285              	.LC4:
 286 0060 0D437572 		.ascii	"\015Current Time Base: \000"
 286      72656E74 
 286      2054696D 
 286      65204261 
 286      73653A20 
 287 0075 000000   		.space	3
 288              	.LC5:
 289 0078 0D437572 		.ascii	"\015Current Horizontal Position: \000"
 289      72656E74 
 289      20486F72 
 289      697A6F6E 
 289      74616C20 
 290 0097 00       		.space	1
 291              	.LC6:
 292 0098 0D437572 		.ascii	"\015Current Trigger Mode: \000"
 292      72656E74 
 292      20547269 
 292      67676572 
 292      204D6F64 
 293              	.LC7:
 294 00b0 0D437572 		.ascii	"\015Current Trigger Slope: \000"
 294      72656E74 
 294      20547269 
 294      67676572 
 294      20536C6F 
 295 00c9 000000   		.space	3
 296              	.LC8:
 297 00cc 0D437572 		.ascii	"\015Current Trigger Level: \000"
 297      72656E74 
 297      20547269 
 297      67676572 
 297      204C6576 
 298 00e5 000000   		.space	3
 299              	.LC9:
 300 00e8 0D437572 		.ascii	"\015Current Record Length: \000"
 300      72656E74 
 300      20526563 
 300      6F726420 
 300      4C656E67 
 301 0101 000000   		.space	3
 302              	.LC10:
 303 0104 0D437572 		.ascii	"\015Current Position Offeset: \000"
 303      72656E74 
 303      20506F73 
 303      6974696F 
 303      6E204F66 
 304              	.LC11:
 305 0120 2D2D2D2D 		.ascii	"---------------------------------------------------"
 305      2D2D2D2D 
 305      2D2D2D2D 
 305      2D2D2D2D 
 305      2D2D2D2D 
 306 0153 2D2D2D2D 		.ascii	"---------------------------------------------------"
 306      2D2D2D2D 
 306      2D2D2D2D 
 306      2D2D2D2D 
 306      2D2D2D2D 
 307 0186 2D2D2D2D 		.ascii	"-----\000"
 307      2D00
 308              		.text
 309              	.Letext0:
 310              		.file 2 "Common.h"
 311              		.file 3 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default
 312              		.file 4 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 313              		.file 5 "./Libraries/CMSIS/CM3/CoreSupport/core_cm3.h"
 314              		.file 6 "./Libraries/CMSIS/CM3/CoreSupport/system_stm32f10x.h"
 315              		.file 7 "./Libraries/CMSIS/CM3/CoreSupport/stm32f10x.h"
 316              		.file 8 "Board.h"
 317              		.file 9 "UartInt.h"
 318              		.file 10 "libdso138.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 UserCode.c
     /tmp/ccZMqTr4.s:16     .text.UsrCode:0000000000000000 $t
     /tmp/ccZMqTr4.s:24     .text.UsrCode:0000000000000000 UsrCode
     /tmp/ccZMqTr4.s:239    .text.UsrCode:00000000000000e8 $d
                            *COM*:0000000000000004 deltaTickValue
                            *COM*:0000000000000004 previousTickVal
                            *COM*:0000000000000004 currentTickVal
                            *COM*:0000000000000020 int_buffer
     /tmp/ccZMqTr4.s:272    .rodata.UsrCode.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
uputs
GetVSen
uputInt
GetCpl
GetVPos
GetTimebase
GetHPos
GetTrigMode
GetTrigEdge
GetTrigLvl
GetRecLen
GetVPosOfs
