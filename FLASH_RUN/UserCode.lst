   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"UserCode.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UsrCode,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	UsrCode
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	UsrCode:
  25              	.LFB29:
  26              		.file 1 "UserCode.c"
   1:UserCode.c    **** #include "UserCode.h"
   2:UserCode.c    **** #include "libdso138.h"
   3:UserCode.c    **** #include "BaseConv.h"
   4:UserCode.c    **** 
   5:UserCode.c    **** volatile U32  currentTickVal,previousTickVal,deltaTickValue;
   6:UserCode.c    **** 
   7:UserCode.c    **** void UsrCode()
   8:UserCode.c    **** {
  27              		.loc 1 8 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
   9:UserCode.c    ****     if(BitTest(GetDsoStatus(),DSO_CaptureDone))
  31              		.loc 1 9 0
  32 0000 184B     		ldr	r3, .L11
   8:UserCode.c    ****     if(BitTest(GetDsoStatus(),DSO_CaptureDone))
  33              		.loc 1 8 0
  34 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 9 0
  45 0006 9847     		blx	r3
  46              	.LVL0:
  47 0008 C307     		lsls	r3, r0, #31
  48 000a 01D4     		bmi	.L10
  10:UserCode.c    ****     {
  11:UserCode.c    ****         twelveToSixten(&SampleBuf[0], &conv_record_buffer[0], GetRecLen());
  12:UserCode.c    **** 
  13:UserCode.c    ****         for(U16 i = 0; i< RecLenMax; i++)
  14:UserCode.c    ****         {
  15:UserCode.c    ****          uputs((U8 *)"\rSample At Index: ", USART1);
  16:UserCode.c    ****          uputDec(i, USART1);   
  17:UserCode.c    ****          uputs((U8 *) " Is :", USART1);
  18:UserCode.c    ****          uputDec(*(conv_record_buffer+i), USART1);   
  19:UserCode.c    ****          uputs((U8 *) "\n\r", USART1);
  20:UserCode.c    ****         }
  21:UserCode.c    ****     }
  22:UserCode.c    ****     //Current Voltage Sensitivity
  23:UserCode.c    ****    /* uputs((U8 *)"\rCurrent Voltage Sensitivity: 0x", USART1);
  24:UserCode.c    ****     uputHex(GetVSen(), USART1);    
  25:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);
  26:UserCode.c    **** 
  27:UserCode.c    ****     //Current Couple Setting
  28:UserCode.c    ****     uputs((U8 *)"\rCurrent Couple Setting: ", USART1);
  29:UserCode.c    ****     uputDec(GetCpl(), USART1);    
  30:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  31:UserCode.c    **** 
  32:UserCode.c    ****     //Current Vertical Position
  33:UserCode.c    ****     uputs((U8 *)"\rCurrent Vertical Position: ", USART1);
  34:UserCode.c    ****     uputDec(GetVPos(), USART1);    
  35:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  36:UserCode.c    **** 
  37:UserCode.c    ****     //Current Time Base 
  38:UserCode.c    ****     uputs((U8 *)"\rCurrent Time Base: ", USART1);
  39:UserCode.c    ****     uputDec(GetTimebase(), USART1);    
  40:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  41:UserCode.c    **** 
  42:UserCode.c    ****     //Current Horizontal Position
  43:UserCode.c    ****     uputs((U8 *)"\rCurrent Horizontal Position: ", USART1);
  44:UserCode.c    ****     uputDec(GetHPos(), USART1);    
  45:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  46:UserCode.c    **** 
  47:UserCode.c    ****     //Current Trigger Mode
  48:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Mode: ", USART1);
  49:UserCode.c    ****     uputDec(GetTrigMode(), USART1);    
  50:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  51:UserCode.c    **** 
  52:UserCode.c    ****     //Current Trigger Slope
  53:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Slope: ", USART1);
  54:UserCode.c    ****     uputDec(GetTrigEdge(), USART1);    
  55:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  56:UserCode.c    **** 
  57:UserCode.c    ****     //Current Trigger Level
  58:UserCode.c    ****     uputs((U8 *)"\rCurrent Trigger Level: ", USART1);
  59:UserCode.c    ****     uputDec(GetTrigLvl(), USART1);    
  60:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  61:UserCode.c    **** 
  62:UserCode.c    ****     //Current Record Length
  63:UserCode.c    ****     uputs((U8 *)"\rCurrent Record Length: ", USART1);
  64:UserCode.c    ****     uputDec(GetRecLen(), USART1);    
  65:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);    
  66:UserCode.c    **** 
  67:UserCode.c    ****     //Current Vertical Position Offeset
  68:UserCode.c    ****     uputs((U8 *)"\rCurrent Position Offeset: ", USART1);
  69:UserCode.c    ****     uputDec(GetVPosOfs(), USART1);    
  70:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);   
  71:UserCode.c    ****    
  72:UserCode.c    ****     //Current DSO Engine Status
  73:UserCode.c    ****     uputs((U8 *)"\rCurrent DSO Engine Status: 0x", USART1);
  74:UserCode.c    ****     uputHex(GetDsoStatus(), USART1);    
  75:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);   
  76:UserCode.c    **** 
  77:UserCode.c    ****     //Current Sample in Buffer only Rolling Mode
  78:UserCode.c    ****     uputs((U8 *)"\rValue of Current Buffer: ", USART1);
  79:UserCode.c    ****     uputDec((*CurrentSample), USART1);    
  80:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);   
  81:UserCode.c    ****     
  82:UserCode.c    ****    
  83:UserCode.c    ****     // extern	U16	*SampleBuf;
  84:UserCode.c    ****     //extern	U16	*CurrentSample;
  85:UserCode.c    **** 
  86:UserCode.c    ****     //End Of Records
  87:UserCode.c    ****     uputs((U8 *)"****************", USART1);
  88:UserCode.c    ****     uputs((U8 *) "\n\r", USART1);         
  89:UserCode.c    **** */
  90:UserCode.c    **** }
  49              		.loc 1 90 0
  50 000c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
  51              	.L10:
  11:UserCode.c    **** 
  52              		.loc 1 11 0
  53 0010 154A     		ldr	r2, .L11+4
  54 0012 164B     		ldr	r3, .L11+8
  55 0014 1468     		ldr	r4, [r2]
  56 0016 9847     		blx	r3
  57              	.LVL1:
  58 0018 1549     		ldr	r1, .L11+12
  59 001a 0246     		mov	r2, r0
  60 001c 154B     		ldr	r3, .L11+16
  61 001e 2046     		mov	r0, r4
  62 0020 9847     		blx	r3
  63              	.LVL2:
  64 0022 0025     		movs	r5, #0
  65 0024 DFF86080 		ldr	r8, .L11+36
  66 0028 134E     		ldr	r6, .L11+20
  67 002a 144F     		ldr	r7, .L11+24
  68              	.LBB2:
  15:UserCode.c    ****          uputDec(i, USART1);   
  69              		.loc 1 15 0
  70 002c 144C     		ldr	r4, .L11+28
  71 002e DFF85CA0 		ldr	r10, .L11+40
  17:UserCode.c    ****          uputDec(*(conv_record_buffer+i), USART1);   
  72              		.loc 1 17 0
  73 0032 DFF85C90 		ldr	r9, .L11+44
  74              	.LVL3:
  75              	.L3:
  15:UserCode.c    ****          uputDec(i, USART1);   
  76              		.loc 1 15 0 discriminator 3
  77 0036 2146     		mov	r1, r4
  78 0038 5046     		mov	r0, r10
  79 003a B047     		blx	r6
  80              	.LVL4:
  16:UserCode.c    ****          uputs((U8 *) " Is :", USART1);
  81              		.loc 1 16 0 discriminator 3
  82 003c 2846     		mov	r0, r5
  83 003e 2146     		mov	r1, r4
  84 0040 B847     		blx	r7
  85              	.LVL5:
  17:UserCode.c    ****          uputDec(*(conv_record_buffer+i), USART1);   
  86              		.loc 1 17 0 discriminator 3
  87 0042 2146     		mov	r1, r4
  88 0044 4846     		mov	r0, r9
  89 0046 B047     		blx	r6
  90              	.LVL6:
  18:UserCode.c    ****          uputs((U8 *) "\n\r", USART1);
  91              		.loc 1 18 0 discriminator 3
  92 0048 2146     		mov	r1, r4
  93 004a 38F9020F 		ldrsh	r0, [r8, #2]!
  94 004e B847     		blx	r7
  95              	.LVL7:
  96 0050 0135     		adds	r5, r5, #1
  97              	.LVL8:
  19:UserCode.c    ****         }
  98              		.loc 1 19 0 discriminator 3
  99 0052 2146     		mov	r1, r4
 100 0054 0B48     		ldr	r0, .L11+32
 101 0056 B047     		blx	r6
 102              	.LVL9:
  13:UserCode.c    ****         {
 103              		.loc 1 13 0 discriminator 3
 104 0058 B5F5806F 		cmp	r5, #1024
 105 005c EBD1     		bne	.L3
 106              	.LBE2:
 107              		.loc 1 90 0
 108 005e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 109              	.L12:
 110 0062 00BF     		.align	2
 111              	.L11:
 112 0064 00000000 		.word	GetDsoStatus
 113 0068 00000000 		.word	SampleBuf
 114 006c 00000000 		.word	GetRecLen
 115 0070 00000000 		.word	conv_record_buffer
 116 0074 00000000 		.word	twelveToSixten
 117 0078 00000000 		.word	uputs
 118 007c 00000000 		.word	uputDec
 119 0080 00380140 		.word	1073821696
 120 0084 1C000000 		.word	.LC2
 121 0088 FEFFFFFF 		.word	conv_record_buffer-2
 122 008c 00000000 		.word	.LC0
 123 0090 14000000 		.word	.LC1
 124              		.cfi_endproc
 125              	.LFE29:
 127              		.comm	deltaTickValue,4,4
 128              		.comm	previousTickVal,4,4
 129              		.comm	currentTickVal,4,4
 130              		.comm	conv_record_buffer,2048,4
 131              		.comm	int_buffer,32,4
 132              		.section	.rodata.UsrCode.str1.4,"aMS",%progbits,1
 133              		.align	2
 134              	.LC0:
 135 0000 0D53616D 		.ascii	"\015Sample At Index: \000"
 135      706C6520 
 135      41742049 
 135      6E646578 
 135      3A2000
 136 0013 00       		.space	1
 137              	.LC1:
 138 0014 20497320 		.ascii	" Is :\000"
 138      3A00
 139 001a 0000     		.space	2
 140              	.LC2:
 141 001c 0A0D00   		.ascii	"\012\015\000"
 142              		.text
 143              	.Letext0:
 144              		.file 2 "Common.h"
 145              		.file 3 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default
 146              		.file 4 "/home/bot-10/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 147              		.file 5 "./Libraries/CMSIS/CM3/CoreSupport/core_cm3.h"
 148              		.file 6 "./Libraries/CMSIS/CM3/CoreSupport/system_stm32f10x.h"
 149              		.file 7 "./Libraries/CMSIS/CM3/CoreSupport/stm32f10x.h"
 150              		.file 8 "Board.h"
 151              		.file 9 "UartInt.h"
 152              		.file 10 "libdso138.h"
 153              		.file 11 "BaseConv.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 UserCode.c
     /tmp/ccb8ZKgu.s:16     .text.UsrCode:0000000000000000 $t
     /tmp/ccb8ZKgu.s:24     .text.UsrCode:0000000000000000 UsrCode
     /tmp/ccb8ZKgu.s:112    .text.UsrCode:0000000000000064 $d
                            *COM*:0000000000000800 conv_record_buffer
                            *COM*:0000000000000004 deltaTickValue
                            *COM*:0000000000000004 previousTickVal
                            *COM*:0000000000000004 currentTickVal
                            *COM*:0000000000000020 int_buffer
     /tmp/ccb8ZKgu.s:133    .rodata.UsrCode.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
GetDsoStatus
SampleBuf
GetRecLen
twelveToSixten
uputs
uputDec
